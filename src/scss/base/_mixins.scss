// ================================================
// Миксин для позиционирования секции
//
// Пример использования:
//   .section {
//     @include section-position;
//   }
//
// Описание:
// Этот миксин устанавливает относительное позиционирование для секции
// и задает абсолютное позиционирование для фона секции и содержимого.
// Содержимое имеет z-index: 2, чтобы находиться выше фона.
// ================================================
@mixin section-position {
    // Относительное позиционирование для секции
    position: relative;

    // Стили для содержимого секции
    &__content {
        position: relative;
        z-index: 2;
    }
    
    // Стили для фона секции
    &__background {
        position: absolute;
        top: 0;
        left: 0;
    }

    // Общие стили для содержимого и фона
    &__content, &__background {
        width: 100%;
        height: 100%;
    }
}


// ====================================================
// Миксин для создания адаптивного стиля
//
// Параметры:
//   $property - CSS-свойство, для которого задается адаптивный стиль.
//   $pc-font-size - Размер на больших экранах (в px или rem).
//   $mobile-font-size - Размер на мобильных устройствах (в px или rem).
//
// Пример использования:
//   .text {
//     @include adaptive-style('font-size', 16px, 14px);
//   }
//
// Описание:
// Этот миксин вычисляет и применяет адаптивный стиль для заданного свойства.
// Используется для размеров шрифта и высоты строки, 
// но может быть адаптирован для других свойств.
// Он учитывает разницу между размерами на больших и мобильных экранах, преобразует
// их в px, если необходимо, и применяет стили с использованием calc для вычисления
// адаптивного размера в зависимости от ширины экрана.
// ====================================================
@mixin adaptive-style($property, $pc-font-size, $mobile-font-size) {
    // Вычисление разницы между размерами шрифта на больших и мобильных экранах
    $add-size: $pc-font-size - $mobile-font-size;
    
    // Проверка и преобразование разницы в px, если она задана в rem
    @if (unit($add-size) == px) {
        $add-size: strip-unit($add-size);
    }

    @if (unit($add-size) == rem) {
        $add-size: strip-unit($add-size) * $font-size-base;
    }

    // Применение стилей с использованием calc для вычисления адаптивного размера шрифта
    #{$property}: calc(#{$mobile-font-size} + #{strip-unit($add-size)} * ((100vw - #{$min-screen-width + px}) / (#{$max-screen-width} - #{$min-screen-width})));
}


// ====================================================
// Миксин для адаптивного размера шрифта
//
// Параметры:
//   $pc-font-size - Размер шрифта на больших экранах.
//   $mobile-font-size - Размер шрифта на мобильных экранах.
//
// Пример использования:
//   .text {
//     @include adaptive-font(16px, 14px);
//   }
//
// Описание:
// Этот миксин предоставляет адаптивный размер шрифта,
// применяя разные значения для больших и мобильных экранов.
// Использует другой миксин `adaptive-style`, который
// управляет адаптивным стилем для заданного свойства.
// ====================================================
@mixin adaptive-font($pc-font-size, $mobile-font-size) {
    @include adaptive-style('font-size', $pc-font-size, $mobile-font-size);
}


// ================================================
// Миксин для адаптивной высоты строки
//
// Параметры:
//   $pc-line-height - Высота строки на больших экранах.
//   $mobile-line-height - Высота строки на мобильных экранах.
//
// Пример использования:
//   .element {
//     @include adaptive-line-height(1.5, 1.2);
//   }
//
// Описание:
// Этот миксин обеспечивает адаптивную высоту строки,
// применяя разные значения для больших и мобильных экранов.
// Использует другой миксин `adaptive-style`, который
// управляет адаптивным стилем для заданного свойства.
// ================================================
@mixin adaptive-line-height($pc-line-height, $mobile-line-height) {
    @include adaptive-style('line-height', $pc-line-height, $mobile-line-height);
}


// ==========================================
// Миксин `background-frame` для создания рамки
// с фоном вокруг элемента. Использует
// псевдоэлемент ::before с настраиваемыми свойствами.
//
// Пример использования:
//   .framed-element {
//     @include background-frame;
//   }
//
// Описание:
// Этот миксин предоставляет удобный способ добавления
// фоновой рамки вокруг элемента. Он использует
// псевдоэлемент ::before для создания фона с настраиваемыми
// свойствами, такими как цвет, прозрачность и радиус скругления.
// Миксин также предоставляет опциональный параметр для
// настройки позиционирования элемента.
// ==========================================
@mixin background-frame {
    // Добавление отступа вокруг элемента
    padding: 10px;

    // Изменение позиционирования, если указано значение отличное от static
    @if (position != static) {
        position: relative;
    }

    &::before {
        content: '';

        background-color: $accent-first-color;
        opacity: 0.8;
        border-radius: 15px;

        position: absolute;
        z-index: -1;

        top: 0;
        bottom: 0;
        left: 0;
        right: 0;
    }
}


// ==========================================
// Миксин настроек спутника
// 
// Этот миксин предоставляет гибкое оформление элементов спутника, позволяя настраивать
// различные параметры, такие как имя, высота, ширина, высота орбиты и позиционирование.
// Использует flexbox для вертикального выравнивания и включает адаптивный дизайн.
// 
// @param {String} $name - Содержимое, отображаемое после спутника в качестве метки.
// @param {Number} $satellite-height - Высота спутника.
// @param {Number} $satellite-width - Ширина спутника.
// @param {Number} $orbit-height - Высота орбиты (для вычислений в процентах).
// @param {Number} $left-position - Горизонтальное положение спутника в орбите.
// @param {Number} $bottom-position - Вертикальное положение спутника в орбите.
// 
// Пример использования:
//   .satellite {
//     @include satellite-settings("Спутник 1", 150, 75, 500, 250, 50);
//   }
// ==========================================
@mixin satellite-settings($name, $satellite-height, $satellite-width, $orbit-height, $left-position, $bottom-position) {
    // Стили для flexbox, обеспечивающие вертикальное выравнивание и промежутки
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: min(5px, 20 / 1080 * 100dvh, 20px);

    // Установка высоты спутника на основе высоты орбиты
    height: $satellite-height / $orbit-height * 100%;

    // Позиционирование спутника
    position: absolute;
    left: $left-position / $orbit-height * 100%;
    bottom: $bottom-position / $orbit-height * 100%;
    
    // Анимация вращения спутника
    animation: satellite-rotation 12s linear infinite both;

    // Стили для изображения спутника
    &-img {
        height: 100%;
        width: 100%;
    }
    
    // Метка, отображаемая после спутника
    &::after {
        content: $name;

        // Позиционирование метки
        position: absolute;
        top: 100%;
        
        // Стили для текста метки
        color: $text-second-color;
        
        // Адаптивный размер шрифта с использованием другого миксина
        @include adaptive-font($pc-font-size: $font-size-main, $mobile-font-size: $font-size-main-mobile);
        letter-spacing: 15.6px;

        // Скрытие метки на маленьких экранах
        @media screen and ((max-width: 764px) or (max-height: 764px)) {
            opacity: 0;
        }
    }
}